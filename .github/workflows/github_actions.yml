name: Default config - Github actions CI/CD

on:
  push:
    branches: [ stream3/master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: define variables
        run: |
          export PACKAGE_VERSION=0.0.${{ github.run_number }}
          echo "::set-env name=PACKAGE_VERSION::$PACKAGE_VERSION"

          export PACKAGE_FILENAME=default_config.$PACKAGE_VERSION.zip
          echo "::set-env name=PACKAGE_FILENAME::$PACKAGE_FILENAME"

          export OCTOPUS_SERVER=https://${{ secrets.OCTOPUS_ORG }}.octopus.app/
          echo "::set-env name=OCTOPUS_SERVER::$OCTOPUS_SERVER"

          echo "::set-env name=OCTOPUS_ENVIROMENT::QA-DEMO"

      - name: build
        run: | 
          mkdir dist
          cp -r offline dist
          cp -r openelis dist
          cp -r openmrs dist
          ls -laR dist

      - name: package
        run: |
          echo "PACKAGE_FILENAME '$PACKAGE_FILENAME'"
          zip -r $PACKAGE_FILENAME dist/* 

      - name: Install Octopus CLI
        run: |
          sudo apt update && sudo apt install --no-install-recommends gnupg curl ca-certificates apt-transport-https && \
          curl -sSfL https://apt.octopus.com/public.key | sudo apt-key add - && \
          sudo sh -c "echo deb https://apt.octopus.com/ stable main > /etc/apt/sources.list.d/octopus.com.list" && \
          sudo apt update && sudo apt install octopuscli

      - name: Publish to octopus
        run: |
          echo "PACKAGE_FILENAME '$PACKAGE_FILENAME'"
          octo push --package="$PACKAGE_FILENAME" --server="$OCTOPUS_SERVER" --apiKey="${{ secrets.OCTOPUS_API_KEY }}" --space="${{ secrets.OCTOPUS_SPACE_FRAGMENT }}"

      - name: Create Release and Deploy
        run: |
          octo create-release --project="default-config" --packageVersion="$PACKAGE_VERSION" --server="$OCTOPUS_SERVER" --apiKey="${{ secrets.OCTOPUS_API_KEY }}" --space="${{ secrets.OCTOPUS_SPACE_FRAGMENT }}" --deployTo="$OCTOPUS_ENVIROMENT"